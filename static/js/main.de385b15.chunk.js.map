{"version":3,"sources":["hooks/useLocalStorage.js","hooks/useFetch.js","components/tagList.js","components/addToFavorites.js","components/feed.js","utils.js","components/pagination.js","components/loading.js","components/errorMessage.js","components/popularTags.js","contexts/currentUser.js","components/feedToggler.js","pages/globalFeed/index.js","pages/article/index.js","components/backendErrorMessage.js","pages/authentication/index.js","pages/tagFeed/index.js","pages/yourFeed/index.js","components/articleForm.js","pages/createArticle/index.js","pages/editArticle/index.js","pages/settings/index.js","routes.js","components/topBar.js","App.js","components/currentUserChecker.js","index.js"],"names":["key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","doFetch","useCallback","requestOptions","headers","authorization","axios","then","res","data","catch","TagList","tags","className","map","tag","AddToFavorites","isFavorited","favoritedCount","articleSlug","apiUrl","useFetch","onClick","event","color","Feed","articles","article","index","to","author","username","src","image","alt","favorited","favoritesCount","slug","title","createdAt","description","tagList","getPaginatior","search","parsedSearch","parse","currentPage","page","Number","offset","PaginationItem","liClasses","classNames","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","Loading","ErrorMessage","PopularTags","initialState","isLoggedIn","currentUser","reducer","state","action","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedToggler","tagName","useContext","currentUserState","exact","GlobalFeed","location","match","stringifiedParams","stringify","console","log","Article","params","deleteArticleResponse","doDeleteArticle","isSuccessDelete","setIsSuccessDelete","method","body","BackendErrorMessage","backendError","errorMessages","Object","message","join","msg","Authentication","props","isLogin","path","pageTitle","descriptionLink","descriptionText","email","setEmail","setUsername","password","setPassword","isSuccessfullSubmit","setIsSuccessfullSubmit","setToken","dispatch","user","onSubmit","e","preventDefault","errors","placeholder","onChange","target","name","disabled","TagFeed","YourFeed","ArticleForm","setTitle","setBody","setDescription","setTagList","split","rows","CreateArticle","isSuccessSubmit","setIsSuccessSubmit","EditArticle","doGetResponse","doGetFetch","doPutResponse","doPutError","doPutFetch","setInitialValue","Settings","setImage","setUserName","isSuccessFullLogout","setIsSuccessFullLogout","bio","setBio","component","TopBar","width","height","viewBox","fill","xmlns","fillRule","d","App","CurrentUserChecker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de385b15.chunk.js","sourcesContent":["import {useEffect, useState} from \"react\";\n\nexport default (key, initialValue ='') => {\n\n    const [value,setValue] = useState(()=>{\n        return localStorage.getItem(key) || initialValue;\n    })\n\n    useEffect(() =>{\n        localStorage.setItem(key, value);\n    },[value, key])\n\n    return [value,setValue]\n}\n","import {useEffect, useState, useCallback} from \"react\";\nimport axios from \"axios\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport default (url) => {\n    const baseUrl = 'https://conduit.productionready.io/api'\n    const [isLoading, setIsLoading] =  useState(false)\n    const [response, setResponse] = useState(null)\n    const [error, setError] = useState(null)\n    const [options, setOptions] = useState({})\n    const [token] = useLocalStorage('token')\n\n\n    const doFetch = useCallback((options = {}) => {\n        setOptions(options)\n        setIsLoading(true)\n    },[])\n\n\n    useEffect(() => {\n        const requestOptions = {\n            ...options,\n            ...{\n                headers: {\n                    authorization: token ? `Token ${token}` : ''\n                }\n            }\n        }\n        // console.log('requestOptions',requestOptions);\n\n        if (!isLoading) {\n            return\n        }\n        axios(baseUrl + url, requestOptions)\n            .then(res => {\n                // console.log('success', res);\n                setResponse(res.data)\n                setIsLoading(false)\n            })\n            .catch(({response}) => {\n                setIsLoading(false)\n                // console.log('ERROR', response);\n                setError(\n                    response.data\n                    ? response.data\n                        :response\n                )\n            })\n    },[isLoading,url,options,token])\n\n    return [{isLoading, response, error}, doFetch]\n}\n","\nimport React from \"react\";\n\nconst TagList = ({tags}) => {\n\n    return (\n        <ul className='col-md-6'>\n            {tags.map(tag =>\n                (\n                    <li\n                        key={tag}\n                        className='badge badge-pill badge-info'\n                    >\n                        {tag}\n                    </li>\n                )\n            )}\n        </ul>\n    )\n}\nexport default TagList\n","import React from 'react'\nimport { BsHeart,BsHeartFill } from 'react-icons/bs'\nimport useFetch from \"../hooks/useFetch\";\n\nconst AddToFavorites = ({isFavorited, favoritedCount, articleSlug}) =>{\n    const apiUrl = `/articles/${articleSlug}`\n    const [{response},doFetch] = useFetch(apiUrl);\n    function handleLike(event) {\n\n    }\n\n    return(\n        <button className='btn badge-light' onClick={handleLike}>\n            {!isFavorited ? <BsHeart/> : <BsHeartFill color='green'/>}\n                &nbsp;{favoritedCount}\n        </button>\n    )\n}\n\nexport default AddToFavorites\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport TagList from \"./tagList\";\nimport AddToFavorites from \"./addToFavorites\";\n\nconst Feed = ({articles}) => {\n\n\n\n    return (\n        <div>\n            {articles.map((article, index) => (\n\n                <div className=\"card-block\" key={index}>\n                    <div className=\"card-header container\">\n                        <Link\n                            to={`/profiles/${article.author.username}`}>\n                            <img\n                                className='avatar'\n                                src={article.author.image}\n                                alt=\"\"\n                            />\n                        </Link>\n                        &nbsp;\n                        <Link\n                            to={`/profiles/${article.author.username}`}>\n                            {article.author.username}\n                        </Link>\n\n                    </div>\n\n                    <div className=\"card\" >\n                        <div className=\"text-right\">\n                            <AddToFavorites isFavorited={article.favorited} favoritedCount={article.favoritesCount} articleSlug={article.slug}/>\n                        </div>\n                        <Link to={`/articles/${article.slug}`}>\n                            <h4 className=\"card-title\">\n                                {article.title}\n                            </h4>\n\n                            <h6 className=\"card-subtitle mb-2 text-muted\">{article.createdAt}</h6>\n                            <p className=\"card-text\">\n                                {article.description}\n                            </p>\n                            <span>Read more...</span>\n\n                            <TagList tags={article.tagList}/>\n                        </Link>\n\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Feed\n","\nimport {parse} from  'query-string'\n\nexport const range = (start, end) => {\n  return [...Array(end).keys()].map(el=>el+start);\n}\n\nexport const limit = 10;\n\nexport const getPaginatior = search => {\n  const parsedSearch = parse(search)\n  const currentPage = parsedSearch.page ? Number(parsedSearch.page) : 1\n  const offset = currentPage*limit - limit;\n  return {currentPage, offset}\n}\n","import React from 'react';\nimport {range} from '../utils'\nimport {Link} from \"react-router-dom\";\nimport classNames from 'classnames';\n\nconst PaginationItem = ({page, currentPage, url}) =>{\n\n    const liClasses = classNames({\n    'page-item': true,\n    active: currentPage === page,\n  })\n  return (\n      <li className={liClasses}>\n        <Link to={`${url}?page=${page}`} className=\"page-link\">\n          {page}\n        </Link>\n      </li>\n  )\n}\n\nconst Pagination = ({total,url,limit,currentPage}) => {\n  const pagesCount = Math.ceil(total / limit);\n  const pages = range(1, pagesCount)\n  return (\n      <nav>\n        <ul className=\"pagination\">\n          {pages.map(page =>{\n            return (\n                <PaginationItem\n                    key={page}\n                    url={url}\n                    currentPage={currentPage}\n                    page={page}\n                />\n            )\n          })}\n        </ul>\n\n      </nav>\n  )\n}\n\nexport default Pagination;\n","import React from 'react'\n\nconst Loading = () => {\n    return <div> loading...</div>\n}\nexport default Loading\n","import React from 'react'\n\nconst ErrorMessage = () => {\n    return <div> Errrrrrrr...</div>\n}\nexport default ErrorMessage\n","import React, {useEffect} from 'react'\nimport useFetch from \"../hooks/useFetch\";\nimport Loading from \"./loading\";\nimport ErrorMessage from \"./errorMessage\";\nimport {Link} from \"react-router-dom\";\n\n\nconst PopularTags = () => {\n    const [{response, isLoading, error}, doFetch] = useFetch('/tags');\n\n    useEffect(() => {\n        doFetch()\n\n    },[doFetch])\n\n    if (isLoading || !response) {\n        return <Loading />;\n    }\n    if (error) {\n        return <ErrorMessage />;\n    }\n\n    return (\n        <div className='sidebar'>\n            <p>Popular tags</p>\n            <div className='tag-list'>\n                {response.tags.map(tag =>(\n                    <Link\n                        to={`/tags/${tag}`}\n                        className='badge badge-pill badge-primary'\n                        key={tag}\n                    >\n                        {tag}\n                    </Link>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default PopularTags\n","import {createContext, useReducer} from 'react'\nimport React from 'react'\n\nconst initialState = {\n    isLoading: false,\n    isLoggedIn: null,\n    currentUser: null,\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'LOADING':\n            return {...state, isLoading: true}\n        case 'SET_AUTHORIZED':\n            return {\n                ...state,\n                isLoggedIn: true,\n                isLoading: false,\n                currentUser: action.payload\n            }\n        case 'SET_UNAUTHORIZED':\n            return {\n                ...state,\n                isLoggedIn: false\n            }\n        case 'LOGOUT':\n            return {\n                ...initialState,\n                isLoggedIn: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport const CurrentUserContext = createContext()\n\nexport const CurrentUserProvider = ({children}) => {\n    // const [state, setState] = useState({\n    //     isLoading: false,\n    //     isLoggedIn: null,\n    //     currentUser: null,\n    // })\n    const value = useReducer(reducer,initialState)\n    return (\n        <CurrentUserContext.Provider value={value}>\n            {children}\n        </CurrentUserContext.Provider>\n    )\n}\n","import React, {useContext} from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nimport {CurrentUserContext} from \"../contexts/currentUser\";\n\nconst FeedToggler =  ({tagName}) => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    return (\n        <div className='feed-toggle'>\n            <ul className='nav nav-pills '>\n                {currentUserState.isLoggedIn && (\n                    <li className='nav-item'>\n                        <NavLink to='/feed' className='nav-link'>\n                            Your feed\n                        </NavLink>\n                    </li>\n                )}\n                <li className='nav-item'>\n                    <NavLink to='/' className='nav-link' exact>\n                        Global feed\n                    </NavLink>\n                </li>\n                {tagName &&(\n                    <li className='nav-item'>\n                        <NavLink to={`/tags/${tagName}`} className='nav-link'>\n                            {tagName}\n                        </NavLink>\n                    </li>\n                )}\n            </ul>\n\n        </div>\n    )\n}\n\nexport default FeedToggler\n","import {stringify} from \"query-string\";\nimport React, {useEffect, Fragment} from 'react'\n\nimport useFetch from \"../../hooks/useFetch\";\nimport Feed from \"../../components/feed\";\nimport Pagination from \"../../components/pagination\";\nimport {getPaginatior, limit} from \"../../utils\";\nimport PopularTags from \"../../components/popularTags\";\nimport ErrorMessage from \"../../components/errorMessage\";\nimport Loading from \"../../components/loading\";\nimport FeedToggler from \"../../components/feedToggler\";\n\nconst GlobalFeed = ({location,match:{url}}) => {\n\n    const {offset,currentPage} = getPaginatior(location.search);\n    const stringifiedParams = stringify({\n        limit,\n        offset\n    })\n\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(( )=> {\n        doFetch()\n    },[doFetch,currentPage])\n    console.log('globalfeed');\n\n\n    return (\n        <div className='home-page'>\n            <div className='banner'>\n                <div className='container'>\n\n                </div>\n            </div>\n            <div className='container page'>\n                <div className='row'>\n                    <div className='col-md-9'>\n                        <FeedToggler />\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles} />\n                                <Pagination currentPage={currentPage} limit={limit} total={500} url={url}/>\n                            </Fragment>\n                        )}\n\n                    </div>\n                    <div className='col-md-3'>\n                        <PopularTags />\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GlobalFeed\n\n","import React, {useContext, useEffect, useState} from 'react'\nimport useFetch from \"../../hooks/useFetch\";\nimport {Link,Redirect} from \"react-router-dom\";\nimport Loading from \"../../components/loading\";\nimport ErrorMessage from \"../../components/errorMessage\";\nimport TagList from \"../../components/tagList\";\nimport {CurrentUserContext} from \"../../contexts/currentUser\";\n\nconst Article = ({match: {params}}) => {\n    const apiUrl = `/articles/${params.slug}`;\n\n    const [{error, response, isLoading}, doFetch] = useFetch(apiUrl)\n    const [{response: deleteArticleResponse}, doDeleteArticle] = useFetch(apiUrl)\n    const [currentUserState] = useContext(CurrentUserContext)\n    const [isSuccessDelete, setIsSuccessDelete] = useState(false)\n\n    const isAuthor = () => {\n        if (!response || !currentUserState.isLoggedIn) {\n            return false\n        }\n        return (response.article.author.username === currentUserState.currentUser.username)\n    }\n\n    useEffect(() => {\n        doFetch()\n    }, [doFetch])\n\n    const deleteArticle = ()=>{\n        doDeleteArticle({\n            method: 'DELETE'\n        })\n\n    }\n    useEffect(()=>{\n        if(!deleteArticleResponse){\n            return\n        }\n        setIsSuccessDelete(true)\n    },[deleteArticleResponse])\n\n    if(isSuccessDelete){\n        return <Redirect to={'/'}/>\n    }\n\n    return (\n        <div className=\"article-page\">\n            <div className='banner'>\n                {response && (\n                    <div className='article-container'>\n                        <h1>{response.article.title}</h1>\n                        <div className='article-meta'>\n                            <Link to={`/profiles/${response.article.author.username}`}>\n                                <img src={response.article.author.image} alt=\"\"/>\n                            </Link>\n                            <div className='info'>\n                                <Link to={`/profiles/${response.article.author.username}`}>\n                                    {response.article.author.username}\n                                </Link>\n                                <span className='data'>{response.article.createdAt}</span>\n                            </div>\n                            {\n                                isAuthor() && (\n                                    <span>\n                                        <Link className='btn btn-outline-secondary btn-sm'\n                                              to={`/articles/${response.article.slug}/edit`}>\n                                            EDIT\n                                        </Link>\n                                        <button\n                                            className='btn btn-outline-danger btn-sm'\n                                            onClick={deleteArticle}\n                                        >\n                                            DELETE\n                                        </button>\n                                    </span>\n                                )\n                            }\n                        </div>\n                    </div>\n                )}\n            </div>\n            <div className='container page'>\n                {isLoading && <Loading/>}\n                {error && <ErrorMessage/>}\n                {!isLoading && response && (\n                    <div className='row article-content'>\n                        <div className='col-xs-12'>\n                            <div>\n                                <p>\n                                    {response.article.body}\n                                </p>\n                            </div>\n                            <TagList tags={response.article.tagList}/>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\nexport default Article\n","\nimport React from 'react'\n\nconst BackendErrorMessage = ({backendError}) =>{\n\n    const errorMessages = Object.keys(backendError).map(value => {\n        const message = backendError[value].join(' ')\n        return `${value} ${message}`\n    })\n\n    return (<ul className=\"text-danger\">\n        {errorMessages.map(msg=>{\n           return <li key={msg}>{msg}</li>\n        })}\n    </ul>)\n}\nexport default BackendErrorMessage\n","\nimport React, {useState, useEffect, useContext} from 'react'\nimport {Link, Redirect } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport {CurrentUserContext} from '../../contexts/currentUser'\nimport BackendErrorMessage from \"../../components/backendErrorMessage\";\n\nconst Authentication = (props) => {\n\n    const isLogin = props.match.path === '/login'\n    const pageTitle = isLogin ? 'Sing In' : 'Sing Up'\n    const descriptionLink = isLogin ? '/register' : '/login'\n    const descriptionText = isLogin ? 'Need an account?' : 'Have an account?'\n    const apiUrl = isLogin ? '/users/login' : '/users'\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [isSuccessfullSubmit, setIsSuccessfullSubmit] = useState(false)\n    const [{isLoading, response,error},doFetch] = useFetch(apiUrl)\n    const [,setToken] = useLocalStorage('token')\n    const [currentUser,dispatch] = useContext(CurrentUserContext)\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const user = isLogin ? {email, password} : {email, password, username};\n        doFetch({\n            method: 'post',\n            data: {\n                user\n            }\n        })\n    }\n\n    useEffect(()=>{\n        if(!response){\n            return;\n        }\n        setToken(response.user.token);\n        setIsSuccessfullSubmit(true)\n        dispatch({\n            type: 'SET_AUTHORIZED',\n            payload: response.user\n        })\n    },[response,setToken,dispatch])\n\n    if(isSuccessfullSubmit){\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <div className=\"auth-page\">\n            <div className='container'>\n                <div className=\"row \">\n                    <div className=\"col-md-6 offset-sm-3 col-xs-12\">\n                        <h1 className=\"text-center\">{pageTitle}</h1>\n                        <p className=\"text-xs-center\">\n                            <Link to={descriptionLink}>{descriptionText}</Link>\n                        </p>\n                        <form onSubmit={handleSubmit}>\n                            {error && <BackendErrorMessage backendError={error.errors} />}\n                            <fieldset>\n                                {!isLogin && (\n                                        <fieldset className=\"form-group\">\n                                            <input\n\n                                                type='text'\n                                                className=\"form-control form-control-lg\"\n                                                placeholder=\"Username\"\n                                                value={username}\n                                                onChange={e => setUsername(e.target.value)}\n\n                                            />\n                                        </fieldset>\n                                        )}\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        name='email'\n                                        type='email'\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Email\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type='password'\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n\n                                    />\n                                </fieldset>\n                                <button\n                                    className=\"btn btn-lg btn-primary pull-right\"\n                                    type=\"submit\"\n                                    disabled={isLoading}\n                                >\n                                    {pageTitle}\n                                </button>\n                            </fieldset>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\nexport default Authentication\n","import {stringify} from \"query-string\";\nimport React, {useEffect, Fragment} from 'react'\n\nimport useFetch from \"../../hooks/useFetch\";\nimport Feed from \"../../components/feed\";\nimport Pagination from \"../../components/pagination\";\nimport {getPaginatior, limit} from \"../../utils\";\nimport PopularTags from \"../../components/popularTags\";\nimport ErrorMessage from \"../../components/errorMessage\";\nimport Loading from \"../../components/loading\";\nimport FeedToggler from \"../../components/feedToggler\";\n\nconst TagFeed = ({location,match:{url,params}}) => {\n    const tagName = params.slug\n    const {offset,currentPage} = getPaginatior(location.search);\n    const stringifiedParams = stringify({\n        limit,\n        offset,\n        tag: tagName\n    })\n\n    const apiUrl = `/articles?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(( )=> {\n        doFetch()\n    },[doFetch,currentPage,tagName])\n\n\n    return (\n        <div className='home-page'>\n            <div className='banner'>\n                <div className='container'>\n\n                </div>\n            </div>\n            <div className='container page'>\n                <div className='row'>\n                    <div className='col-md-9'>\n                        <FeedToggler tagName={tagName}/>\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles} />\n                                <Pagination currentPage={currentPage} limit={limit} total={500} url={url}/>\n                            </Fragment>\n                        )}\n\n                    </div>\n                    <div className='col-md-3'>\n                        <PopularTags />\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TagFeed\n\n","import {stringify} from \"query-string\";\nimport React, {useEffect, Fragment} from 'react'\n\nimport useFetch from \"../../hooks/useFetch\";\nimport Feed from \"../../components/feed\";\nimport Pagination from \"../../components/pagination\";\nimport {getPaginatior, limit} from \"../../utils\";\nimport PopularTags from \"../../components/popularTags\";\nimport ErrorMessage from \"../../components/errorMessage\";\nimport Loading from \"../../components/loading\";\nimport FeedToggler from \"../../components/feedToggler\";\n\nconst YourFeed = ({location,match:{url,params}}) => {\n    const tagName = params.slug\n    const {offset,currentPage} = getPaginatior(location.search);\n    const stringifiedParams = stringify({\n        limit,\n        offset\n    })\n\n    const apiUrl = `/articles/feed?${stringifiedParams}`\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\n\n    useEffect(( )=> {\n        doFetch()\n    },[doFetch,currentPage,tagName])\n\n\n    return (\n        <div className='home-page'>\n            <div className='banner'>\n                <div className='container'>\n\n                </div>\n            </div>\n            <div className='container page'>\n                <div className='row'>\n                    <div className='col-md-9'>\n                        <FeedToggler tagName={tagName}/>\n                        {isLoading && <Loading/>}\n                        {error && <ErrorMessage/>}\n                        {!isLoading && response && (\n                            <Fragment>\n                                <Feed articles={response.articles} />\n                                <Pagination currentPage={currentPage} limit={limit} total={500} url={url}/>\n                            </Fragment>\n                        )}\n\n                    </div>\n                    <div className='col-md-3'>\n                        <PopularTags />\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default YourFeed\n\n","import React, {useEffect, useState} from 'react'\nimport BackendErrorMessage from \"./backendErrorMessage\";\n\nconst ArticleForm = ({onSubmit, errors, initialValue}) => {\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [description, setDescription] = useState('')\n    const [tagList, setTagList] = useState('')\n    const article = {\n        title,\n        body,\n        description,\n        tagList: tagList.split(' ')\n    }\n    useEffect(() =>{\n        if(!initialValue){\n            return\n        }\n        setTitle(initialValue.title)\n        setBody(initialValue.body)\n        setDescription(initialValue.description)\n        setTagList(initialValue.tagList.join(' '))\n    },[initialValue] )\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        onSubmit(article)\n    }\n\n\n    return (\n        <div className=\"editor-page\">\n            <div className=\"container-page\">\n                <div className='row'>\n                    <div className='col-md-10 offset-md-1 col-xs-12'>\n                        {errors && <BackendErrorMessage backendError={errors}/>}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className='form-group'>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder='Article title'\n                                        value={title}\n                                        onChange={e=>setTitle(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder='What this article about?'\n                                        value={description}\n                                        onChange={e=>setDescription(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <textarea\n                                        className=\"form-control\"\n                                        rows=\"10\"\n                                        placeholder='Write your article (in markdown)'\n                                        value={body}\n                                        onChange={e=>setBody(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder='Enter tags'\n                                        value={tagList}\n                                        onChange={e=>setTagList(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className='form-group'>\n                                    <button\n                                        type='submit'\n                                        className=\"btn btn-lg badge-pill btn-primary\"\n                                    >Publish Article</button>\n                                </fieldset>\n                            </fieldset>\n                        </form>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ArticleForm\n","\nimport React, {useContext, useEffect, useState} from 'react'\nimport ArticleForm from \"../../components/articleForm\";\nimport useFetch from \"../../hooks/useFetch\";\nimport {Redirect} from \"react-router-dom\";\nimport {CurrentUserContext} from \"../../contexts/currentUser\";\n\nconst CreateArticle = () => {\n    const [currentUserState] = useContext(CurrentUserContext)\n    const apiUrl = \"/articles\"\n    const [{response, error}, doFetch] = useFetch(apiUrl)\n    const [isSuccessSubmit,setIsSuccessSubmit] = useState(false)\n    const initialValue = {\n        title:'',\n        description:'',\n        body:'',\n        tagList:[]\n     }\n\n    const handleSubmit = (article) => {\n        doFetch({\n            method: 'POST',\n            data: {\n                article\n            }\n        })\n    }\n\n    useEffect(() =>{\n        if(!response){\n            return\n        }\n        setIsSuccessSubmit(true)\n\n    },[response])\n\n    if(isSuccessSubmit){\n        return  <Redirect to={`/articles/${response.article.slug}`} />\n    }\n    if(currentUserState.isLoggedIn === false){\n        return <Redirect to='/'/>\n    }\n\n    return (\n        <ArticleForm\n            errors={(error && error.errors) || {}}\n            initialValue={initialValue}\n            onSubmit={handleSubmit}\n        />\n    )\n}\nexport default CreateArticle\n","import React, {useContext, useEffect, useState} from 'react'\nimport ArticleForm from \"../../components/articleForm\";\nimport useFetch from \"../../hooks/useFetch\";\nimport {Redirect} from \"react-router-dom\";\nimport {CurrentUserContext} from \"../../contexts/currentUser\";\n\nconst EditArticle = ({match}) => {\n    const {slug} = match.params\n    const [currentUserState] = useContext(CurrentUserContext)\n    const apiUrl = `/articles/${slug}`\n    const [{response: doGetResponse, error: doGetError}, doGetFetch] = useFetch(apiUrl)\n    const [{response: doPutResponse, error: doPutError}, doPutFetch] = useFetch(apiUrl)\n    const [initialValue, setInitialValue] = useState(null)\n    const [isSuccessSubmit,setIsSuccessSubmit] = useState(false)\n\n\n    const handleSubmit = (article) => {\n        doPutFetch({\n            method: 'PUT',\n            data: {\n                article\n            }\n        })\n    }\n\n    useEffect(doGetFetch,[doGetFetch] )\n\n    useEffect(()=>{\n        if(!doGetResponse){\n            return\n        }\n        setInitialValue({\n            title: doGetResponse.article.title,\n            description: doGetResponse.article.description,\n            body: doGetResponse.article.body,\n            tagList: doGetResponse.article.tagList,\n        })\n\n    },[doGetResponse])\n    useEffect(() =>{\n        if(!doPutResponse){\n           return\n        }\n        setIsSuccessSubmit(true)\n    },[doPutResponse])\n\n    if(isSuccessSubmit){\n        return  <Redirect to={`/articles/${slug}`} />\n    }\n\n    if(currentUserState.isLoggedIn === false){\n        return <Redirect to='/'/>\n    }\n\n\n    return (\n        <ArticleForm\n            errors={(doPutError && doPutError.errors) || {}}\n            initialValue={initialValue}\n            onSubmit={handleSubmit}\n        />\n    )\n}\n\nexport default EditArticle\n","import React, {useContext, useEffect, useState} from 'react'\n\nimport useFetch from \"../../hooks/useFetch\";\nimport {CurrentUserContext} from \"../../contexts/currentUser\";\nimport BackendErrorMessage from \"../../components/backendErrorMessage\";\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\nimport {Redirect} from \"react-router-dom\";\n\nconst Settings = ()=>{\n    const [,setToken] = useLocalStorage('token');\n    const [currentUserState,dispatch] = useContext(CurrentUserContext)\n    const apiUrl = '/user'\n    const [{response,error}, doFetch] = useFetch(apiUrl)\n    const [image,setImage] = useState('');\n    const [username,setUserName] = useState('');\n    const [isSuccessFullLogout,setIsSuccessFullLogout] = useState(false);\n    const [bio,setBio] = useState('');\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n\n    console.log(currentUserState);\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        doFetch({\n            method: 'PUT',\n            data:{\n               user:{\n                   ...currentUserState.currentUser,\n                   image,\n                   username,\n                   bio,\n                   email,\n                   password,\n               }\n            }\n        })\n    }\n\n    function logout(event) {\n        event.preventDefault()\n        setToken('')\n        dispatch({type:'LOGOUT'})\n        setIsSuccessFullLogout(true)\n\n    }\n    useEffect(()=>{\n        if(!currentUserState.currentUser){\n            return\n        }\n        const {currentUser:{image,username,bio,email}} = currentUserState;\n        setImage(image)\n        setUserName(username)\n        setBio(bio)\n        setEmail(email)\n\n    },[currentUserState.currentUser])\n\n    useEffect(()=>{\n        if(!response){\n            return\n        }\n        dispatch({type:'SET_AUTHORIZED',payload:response.user})\n    },[response, dispatch])\n\n    if(isSuccessFullLogout){\n        return <Redirect to=\"/\"/>\n    }\n\n    return(\n        <div className=\"settings-page\">\n            <div className=\"container page\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3 col-xs-12\">\n                        <h1 className=\"text-center\">Your settings</h1>\n                        {error && <BackendErrorMessage backendError={error.errors}/>}\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className='form-control form-control-lg'\n                                        placeholder='URL of profile picture'\n                                        value={image}\n                                        onChange={e => setImage(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Username'\n                                        value={username}\n                                        onChange={e => setUserName(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <textarea\n                                        className='form-control form-control-lg'\n                                        rows='8'\n                                        placeholder='Short bio'\n                                        value={bio}\n                                        onChange={e => setBio(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"email\"\n                                        className='form-control form-control-lg'\n                                        placeholder='Email'\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </fieldset>\n                                <fieldset className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className='form-control form-control-lg'\n                                        placeholder='NEW Password'\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </fieldset>\n                                <button type=\"submit\" className=\"btn btn-lg btn-primary badge-pill\" >Update settings</button>\n                            </fieldset>\n                        </form>\n                        <hr/>\n                        <button className='btn btn-outline-danger' onClick={logout}>Or click here for logout</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Settings\n","import {Switch, Route} from 'react-router-dom'\nimport React from 'react'\n\nimport GlobalFeed from \"./pages/globalFeed\";\nimport Article from \"./pages/article\";\nimport Authentication from \"./pages/authentication\";\nimport TagFeed from \"./pages/tagFeed\";\nimport YourFeed from \"./pages/yourFeed\";\nimport CreateArticle from \"./pages/createArticle\";\nimport EditArticle from \"./pages/editArticle\";\nimport Settings from \"./pages/settings\";\n\nexport default ()=>{\n\n    return (\n        <Switch>\n            <Route path=\"/\" component={GlobalFeed} exact />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/articles/:slug/edit\" component={EditArticle}/>\n            <Route path=\"/articles/new\" component={CreateArticle}/>\n            <Route path=\"/articles/:slug\" component={Article}/>\n            <Route path=\"/feed\" component={YourFeed} />\n            <Route path=\"/tags/:slug\" component={TagFeed} />\n            <Route path=\"/login\" component={Authentication}/>\n            <Route path=\"/register\" component={Authentication}/>\n        </Switch>\n    )\n}\n","import React, {useContext,Fragment} from 'react'\nimport {Link, NavLink} from \"react-router-dom\";\nimport {CurrentUserContext} from \"../contexts/currentUser\";\n\nconst TopBar = () =>{\n    const [currentUserState] = useContext(CurrentUserContext)\n\n    return (\n        <nav className='navbar navbar-expand-lg  navbar-dark bg-dark'>\n            <div className='container'>\n                <Link to='/' className='navbar-brand lemon'>\n                    MyReactProject\n                </Link>\n                <ul className='nav navbar-nav pull-xs-right'>\n                    <li className='nav-item'  >\n                        <NavLink to='/' className='nav-link' exact>\n                            Home\n                        </NavLink>\n                    </li>\n                    {!currentUserState.isLoggedIn && (\n                        <Fragment>\n                            <li className='nav-item'  >\n                                <NavLink to='/login' className='nav-link'>\n                                    Sing in\n                                </NavLink>\n                            </li>\n                            <li className='nav-item'  >\n                                <NavLink to='/register' className='nav-link'>\n                                    Sing up\n                                </NavLink>\n                            </li>\n                        </Fragment>\n                    )}\n                    {currentUserState.isLoggedIn && (\n                        <Fragment>\n                            <li className='nav-item'>\n\n                                <NavLink to='/articles/new' className='nav-link'>\n                                     New Post &nbsp;\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-receipt\"\n                                         fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z\"/>\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z\"/>\n                                    </svg>\n                                </NavLink>\n                                <NavLink to='/settings' className='nav-link'>\n                                    Settings &nbsp;\n                                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-tools\"\n                                         fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M0 1l1-1 3.081 2.2a1 1 0 0 1 .419.815v.07a1 1 0 0 0 .293.708L10.5 9.5l.914-.305a1 1 0 0 1 1.023.242l3.356 3.356a1 1 0 0 1 0 1.414l-1.586 1.586a1 1 0 0 1-1.414 0l-3.356-3.356a1 1 0 0 1-.242-1.023L9.5 10.5 3.793 4.793a1 1 0 0 0-.707-.293h-.071a1 1 0 0 1-.814-.419L0 1zm11.354 9.646a.5.5 0 0 0-.708.708l3 3a.5.5 0 0 0 .708-.708l-3-3z\"/>\n                                        <path fillRule=\"evenodd\"\n                                              d=\"M15.898 2.223a3.003 3.003 0 0 1-3.679 3.674L5.878 12.15a3 3 0 1 1-2.027-2.027l6.252-6.341A3 3 0 0 1 13.778.1l-2.142 2.142L12 4l1.757.364 2.141-2.141zm-13.37 9.019L3.001 11l.471.242.529.026.287.445.445.287.026.529L5 13l-.242.471-.026.529-.445.287-.287.445-.529.026L3 15l-.471-.242L2 14.732l-.287-.445L1.268 14l-.026-.529L1 13l.242-.471.026-.529.445-.287.287-.445.529-.026z\"/>\n                                    </svg>\n                                </NavLink>\n\n                            </li>\n                            <li className='nav-item'>\n                                <NavLink\n                                    to={`/profiles/${currentUserState.currentUser.username}`}\n                                    className='nav-link'>\n                                    <img\n                                        className=\"avatar\"\n                                        src={currentUserState.currentUser.image}\n                                        alt=\"\"\n                                    />\n                                    &nbsp;\n                                    {currentUserState.currentUser.username}\n                                </NavLink>\n                            </li>\n                        </Fragment>\n                    )}\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default TopBar\n","import React from 'react';\nimport Routes from './routes'\nimport TopBar from './components/topBar'\nimport './app.css'\n\nfunction App() {\n  return (\n    <div >\n     <TopBar />\n        <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","import {useContext, useEffect} from 'react';\nimport useFetch from \"../hooks/useFetch\";\nimport {CurrentUserContext} from \"../contexts/currentUser\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst CurrentUserChecker = ({children}) => {\n    const [{response},doFetch] = useFetch('/user')\n    const [,dispatch] = useContext(CurrentUserContext)\n    const [token] = useLocalStorage('token');\n\n\n    useEffect(() =>{\n        if(!token){\n            dispatch({type: 'SET_UNAUTHORIZED'})\n            return\n        }\n        doFetch()\n        dispatch({type: 'LOADING'})\n    },[token, dispatch, doFetch])\n\n    useEffect(()=>{\n        if(!response){\n            return\n        }\n\n        dispatch({\n            type: 'SET_AUTHORIZED',\n            payload: response.user\n        })\n    },[response,dispatch])\n\n    return children\n}\n\nexport default CurrentUserChecker\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\nimport {CurrentUserProvider} from \"./contexts/currentUser\";\nimport CurrentUserChecker from \"./components/currentUserChecker\";\n\n\n\nReactDOM.render(\n    <CurrentUserProvider>\n        <CurrentUserChecker>\n        <Router>\n            <App/>\n        </Router>\n        </CurrentUserChecker>\n    </CurrentUserProvider>\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}